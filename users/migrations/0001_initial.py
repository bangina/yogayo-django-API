# Generated by Django 3.1 on 2020-09-22 15:15

from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(default='email@gmail.com', max_length=60, unique=True)),
                ('username', models.CharField(max_length=20)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=11, null=True, unique=True)),
                ('img_profile', models.ImageField(blank=True, upload_to='user')),
                ('type', models.CharField(choices=[('GENUSER', 'GenUser'), ('ADMINUSER', 'AdminUser')], default='GENUSER', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.AdminUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GenUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
            managers=[
                ('objects', users.models.GenUserManager()),
            ],
        ),
    ]
